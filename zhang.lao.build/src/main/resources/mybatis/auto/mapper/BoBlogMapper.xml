<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zhang.lao.build.mybatis.jdbc.auto.dao.BoBlogMapper" >
  <resultMap id="BaseResultMap" type="zhang.lao.build.mybatis.jdbc.auto.model.BoBlog" >
    <id column="blog_id" property="blogId" jdbcType="VARCHAR" />
    <result column="blog_title" property="blogTitle" jdbcType="VARCHAR" />
    <result column="blog_image" property="blogImage" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="blog_type" property="blogType" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="zhang.lao.build.mybatis.jdbc.auto.model.BoBlog" extends="BaseResultMap" >
    <result column="blog_content" property="blogContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    blog_id, blog_title, blog_image, user_id, blog_type
  </sql>
  <sql id="Blob_Column_List" >
    blog_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="zhang.lao.build.mybatis.jdbc.auto.model.BoBlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bo_blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="zhang.lao.build.mybatis.jdbc.auto.model.BoBlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bo_blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bo_blog
    where blog_id = #{blogId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bo_blog
    where blog_id = #{blogId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="zhang.lao.build.mybatis.jdbc.auto.model.BoBlogExample" >
    delete from bo_blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="zhang.lao.build.mybatis.jdbc.auto.model.BoBlog" >
    insert into bo_blog (blog_id, blog_title, blog_image, 
      user_id, blog_type, blog_content
      )
    values (#{blogId,jdbcType=VARCHAR}, #{blogTitle,jdbcType=VARCHAR}, #{blogImage,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{blogType,jdbcType=DECIMAL}, #{blogContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="zhang.lao.build.mybatis.jdbc.auto.model.BoBlog" >
    insert into bo_blog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="blogId != null" >
        blog_id,
      </if>
      <if test="blogTitle != null" >
        blog_title,
      </if>
      <if test="blogImage != null" >
        blog_image,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="blogType != null" >
        blog_type,
      </if>
      <if test="blogContent != null" >
        blog_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="blogId != null" >
        #{blogId,jdbcType=VARCHAR},
      </if>
      <if test="blogTitle != null" >
        #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogImage != null" >
        #{blogImage,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="blogType != null" >
        #{blogType,jdbcType=DECIMAL},
      </if>
      <if test="blogContent != null" >
        #{blogContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="zhang.lao.build.mybatis.jdbc.auto.model.BoBlogExample" resultType="java.lang.Integer" >
    select count(*) from bo_blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bo_blog
    <set >
      <if test="record.blogId != null" >
        blog_id = #{record.blogId,jdbcType=VARCHAR},
      </if>
      <if test="record.blogTitle != null" >
        blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.blogImage != null" >
        blog_image = #{record.blogImage,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.blogType != null" >
        blog_type = #{record.blogType,jdbcType=DECIMAL},
      </if>
      <if test="record.blogContent != null" >
        blog_content = #{record.blogContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update bo_blog
    set blog_id = #{record.blogId,jdbcType=VARCHAR},
      blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      blog_image = #{record.blogImage,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      blog_type = #{record.blogType,jdbcType=DECIMAL},
      blog_content = #{record.blogContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bo_blog
    set blog_id = #{record.blogId,jdbcType=VARCHAR},
      blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      blog_image = #{record.blogImage,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      blog_type = #{record.blogType,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="zhang.lao.build.mybatis.jdbc.auto.model.BoBlog" >
    update bo_blog
    <set >
      <if test="blogTitle != null" >
        blog_title = #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogImage != null" >
        blog_image = #{blogImage,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="blogType != null" >
        blog_type = #{blogType,jdbcType=DECIMAL},
      </if>
      <if test="blogContent != null" >
        blog_content = #{blogContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where blog_id = #{blogId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="zhang.lao.build.mybatis.jdbc.auto.model.BoBlog" >
    update bo_blog
    set blog_title = #{blogTitle,jdbcType=VARCHAR},
      blog_image = #{blogImage,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      blog_type = #{blogType,jdbcType=DECIMAL},
      blog_content = #{blogContent,jdbcType=LONGVARCHAR}
    where blog_id = #{blogId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="zhang.lao.build.mybatis.jdbc.auto.model.BoBlog" >
    update bo_blog
    set blog_title = #{blogTitle,jdbcType=VARCHAR},
      blog_image = #{blogImage,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      blog_type = #{blogType,jdbcType=DECIMAL}
    where blog_id = #{blogId,jdbcType=VARCHAR}
  </update>
</mapper>