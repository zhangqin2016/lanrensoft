<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zhang.lao.mybatis.auto.dao.MemberCreditsMapper" >
  <resultMap id="BaseResultMap" type="zhang.lao.mybatis.auto.model.MemberCredits" >
    <id column="mc_id" property="mcId" jdbcType="BIGINT" />
    <result column="u_id" property="uId" jdbcType="BIGINT" />
    <result column="total_credits" property="totalCredits" jdbcType="INTEGER" />
    <result column="freeze" property="freeze" jdbcType="INTEGER" />
    <result column="credits" property="credits" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    mc_id, u_id, total_credits, freeze, credits
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="zhang.lao.mybatis.auto.model.MemberCreditsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from member_credits
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from member_credits
    where mc_id = #{mcId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member_credits
    where mc_id = #{mcId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="zhang.lao.mybatis.auto.model.MemberCreditsExample" >
    delete from member_credits
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="zhang.lao.mybatis.auto.model.MemberCredits" >
    insert into member_credits (mc_id, u_id, total_credits, 
      freeze, credits)
    values (#{mcId,jdbcType=BIGINT}, #{uId,jdbcType=BIGINT}, #{totalCredits,jdbcType=INTEGER}, 
      #{freeze,jdbcType=INTEGER}, #{credits,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="zhang.lao.mybatis.auto.model.MemberCredits" >
    insert into member_credits
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mcId != null" >
        mc_id,
      </if>
      <if test="uId != null" >
        u_id,
      </if>
      <if test="totalCredits != null" >
        total_credits,
      </if>
      <if test="freeze != null" >
        freeze,
      </if>
      <if test="credits != null" >
        credits,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mcId != null" >
        #{mcId,jdbcType=BIGINT},
      </if>
      <if test="uId != null" >
        #{uId,jdbcType=BIGINT},
      </if>
      <if test="totalCredits != null" >
        #{totalCredits,jdbcType=INTEGER},
      </if>
      <if test="freeze != null" >
        #{freeze,jdbcType=INTEGER},
      </if>
      <if test="credits != null" >
        #{credits,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="zhang.lao.mybatis.auto.model.MemberCreditsExample" resultType="java.lang.Integer" >
    select count(*) from member_credits
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member_credits
    <set >
      <if test="record.mcId != null" >
        mc_id = #{record.mcId,jdbcType=BIGINT},
      </if>
      <if test="record.uId != null" >
        u_id = #{record.uId,jdbcType=BIGINT},
      </if>
      <if test="record.totalCredits != null" >
        total_credits = #{record.totalCredits,jdbcType=INTEGER},
      </if>
      <if test="record.freeze != null" >
        freeze = #{record.freeze,jdbcType=INTEGER},
      </if>
      <if test="record.credits != null" >
        credits = #{record.credits,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member_credits
    set mc_id = #{record.mcId,jdbcType=BIGINT},
      u_id = #{record.uId,jdbcType=BIGINT},
      total_credits = #{record.totalCredits,jdbcType=INTEGER},
      freeze = #{record.freeze,jdbcType=INTEGER},
      credits = #{record.credits,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="zhang.lao.mybatis.auto.model.MemberCredits" >
    update member_credits
    <set >
      <if test="uId != null" >
        u_id = #{uId,jdbcType=BIGINT},
      </if>
      <if test="totalCredits != null" >
        total_credits = #{totalCredits,jdbcType=INTEGER},
      </if>
      <if test="freeze != null" >
        freeze = #{freeze,jdbcType=INTEGER},
      </if>
      <if test="credits != null" >
        credits = #{credits,jdbcType=INTEGER},
      </if>
    </set>
    where mc_id = #{mcId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="zhang.lao.mybatis.auto.model.MemberCredits" >
    update member_credits
    set u_id = #{uId,jdbcType=BIGINT},
      total_credits = #{totalCredits,jdbcType=INTEGER},
      freeze = #{freeze,jdbcType=INTEGER},
      credits = #{credits,jdbcType=INTEGER}
    where mc_id = #{mcId,jdbcType=BIGINT}
  </update>
</mapper>