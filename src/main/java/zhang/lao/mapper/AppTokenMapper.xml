<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zhang.lao.dao.AppTokenMapper" >
  <resultMap id="BaseResultMap" type="zhang.lao.model.AppToken" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="OPENID" property="openid" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="expires_time" property="expiresTime" jdbcType="TIMESTAMP" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, token, OPENID, create_time, expires_time, uuid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from app_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from app_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zhang.lao.model.AppToken" >
    insert into app_token (id, token, OPENID, 
      create_time, expires_time, uuid
      )
    values (#{id,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{expiresTime,jdbcType=TIMESTAMP}, #{uuid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="zhang.lao.model.AppToken" >
    insert into app_token
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="openid != null" >
        OPENID,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="expiresTime != null" >
        expires_time,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiresTime != null" >
        #{expiresTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zhang.lao.model.AppToken" >
    update app_token
    <set >
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        OPENID = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiresTime != null" >
        expires_time = #{expiresTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zhang.lao.model.AppToken" >
    update app_token
    set token = #{token,jdbcType=VARCHAR},
      OPENID = #{openid,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      expires_time = #{expiresTime,jdbcType=TIMESTAMP},
      uuid = #{uuid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>