<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zhang.lao.dao.MemberLogMapper" >
  <resultMap id="BaseResultMap" type="zhang.lao.model.MemberLog" >
    <id column="ml_id" property="mlId" jdbcType="BIGINT" />
    <result column="u_id" property="uId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="user_agent" property="userAgent" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="zhang.lao.model.MemberLog" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ml_id, u_id, create_time, type, user_agent
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from member_log
    where ml_id = #{mlId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member_log
    where ml_id = #{mlId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="zhang.lao.model.MemberLog" >
    insert into member_log (ml_id, u_id, create_time, 
      type, user_agent, content
      )
    values (#{mlId,jdbcType=BIGINT}, #{uId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=VARCHAR}, #{userAgent,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="zhang.lao.model.MemberLog" >
    insert into member_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mlId != null" >
        ml_id,
      </if>
      <if test="uId != null" >
        u_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="userAgent != null" >
        user_agent,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mlId != null" >
        #{mlId,jdbcType=BIGINT},
      </if>
      <if test="uId != null" >
        #{uId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null" >
        #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zhang.lao.model.MemberLog" >
    update member_log
    <set >
      <if test="uId != null" >
        u_id = #{uId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null" >
        user_agent = #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ml_id = #{mlId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="zhang.lao.model.MemberLog" >
    update member_log
    set u_id = #{uId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR},
      user_agent = #{userAgent,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where ml_id = #{mlId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="zhang.lao.model.MemberLog" >
    update member_log
    set u_id = #{uId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR},
      user_agent = #{userAgent,jdbcType=VARCHAR}
    where ml_id = #{mlId,jdbcType=BIGINT}
  </update>
</mapper>